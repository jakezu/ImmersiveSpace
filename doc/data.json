{
    "project": {},
    "files": {
        "ImmersiveSpace.js": {
            "name": "ImmersiveSpace.js",
            "modules": {},
            "classes": {
                "LoaderClass": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "masterclient.js": {
            "name": "masterclient.js",
            "modules": {},
            "classes": {
                "MovementModifier": 1,
                "MasterClass": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "server.js": {
            "name": "server.js",
            "modules": {},
            "classes": {
                "ServerClass": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "slaveclients.js": {
            "name": "slaveclients.js",
            "modules": {},
            "classes": {
                "SlaveClass": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {},
    "classes": {
        "LoaderClass": {
            "name": "LoaderClass",
            "shortname": "LoaderClass",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "ImmersiveSpace.js",
            "line": 30,
            "description": "The loader class.",
            "extension": "Class",
            "is_constructor": 1
        },
        "MovementModifier": {
            "name": "MovementModifier",
            "shortname": "MovementModifier",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "masterclient.js",
            "line": 45,
            "description": "Movement modifier.",
            "static": 1
        },
        "MasterClass": {
            "name": "MasterClass",
            "shortname": "MasterClass",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "masterclient.js",
            "line": 88,
            "description": "The MasterClass class.",
            "extension": "LoaderClass",
            "is_constructor": 1
        },
        "ServerClass": {
            "name": "ServerClass",
            "shortname": "ServerClass",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "server.js",
            "line": 8,
            "description": "The ServerClass class.",
            "extension": "LoaderClass",
            "is_constructor": 1
        },
        "SlaveClass": {
            "name": "SlaveClass",
            "shortname": "SlaveClass",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "slaveclients.js",
            "line": 35,
            "description": "The SlaveClass class.",
            "extension": "LoaderClass",
            "is_constructor": 1
        }
    },
    "classitems": [
        {
            "file": "ImmersiveSpace.js",
            "line": 21,
            "description": "Includes another javascript files.",
            "itemtype": "method",
            "name": "engine.IncludeFile",
            "params": [
                {
                    "name": "file",
                    "description": "File name",
                    "type": "String"
                }
            ],
            "class": "LoaderClass"
        },
        {
            "file": "ImmersiveSpace.js",
            "line": 39,
            "description": "Main class initialisation.",
            "itemtype": "method",
            "name": "init",
            "static": 1,
            "class": "LoaderClass"
        },
        {
            "file": "ImmersiveSpace.js",
            "line": 48,
            "description": "File which we want to include.",
            "itemtype": "property",
            "name": "file",
            "type": "String",
            "class": "LoaderClass"
        },
        {
            "file": "ImmersiveSpace.js",
            "line": 54,
            "description": "Checks if this instance is running as a server.",
            "itemtype": "method",
            "name": "isServer",
            "class": "LoaderClass"
        },
        {
            "file": "ImmersiveSpace.js",
            "line": 62,
            "description": "Checks if this instance is running as a client.",
            "itemtype": "method",
            "name": "isClient",
            "class": "LoaderClass"
        },
        {
            "file": "ImmersiveSpace.js",
            "line": 68,
            "description": "Regular expression pattern for matching slaveclient name",
            "itemtype": "property",
            "name": "regexp",
            "type": "regular expression string",
            "static": 1,
            "final": 1,
            "class": "LoaderClass"
        },
        {
            "file": "ImmersiveSpace.js",
            "line": 77,
            "description": "Returns username from login properties",
            "itemtype": "method",
            "name": "client.LoginProperty",
            "params": [
                {
                    "name": "\"username\"",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Username",
                "type": "String"
            },
            "class": "LoaderClass"
        },
        {
            "file": "ImmersiveSpace.js",
            "line": 89,
            "description": "Use regular expression to match for the slaveclients name.",
            "itemtype": "method",
            "name": "username.match",
            "params": [
                {
                    "name": "regexp",
                    "description": "Returns true if match",
                    "type": "Regular expression string"
                }
            ],
            "return": {
                "description": "Boolean value",
                "type": "Boolean"
            },
            "class": "LoaderClass"
        },
        {
            "file": "ImmersiveSpace.js",
            "line": 100,
            "description": "Outputs log error message.",
            "itemtype": "method",
            "name": "LogError",
            "params": [
                {
                    "name": "string",
                    "description": "Text to output",
                    "type": "String"
                }
            ],
            "class": "LoaderClass"
        },
        {
            "file": "ImmersiveSpace.js",
            "line": 109,
            "description": "Imports Qt extensions.",
            "itemtype": "method",
            "name": "engine.ImportExtension",
            "params": [
                {
                    "name": "file",
                    "description": "Qt extension file name",
                    "type": "String"
                }
            ],
            "class": "LoaderClass"
        },
        {
            "file": "ImmersiveSpace.js",
            "line": 119,
            "description": "Outputs log message.",
            "itemtype": "method",
            "name": "Log",
            "params": [
                {
                    "name": "string",
                    "description": "Text to output",
                    "type": "String"
                }
            ],
            "class": "LoaderClass"
        },
        {
            "file": "masterclient.js",
            "line": 55,
            "description": "Set rotating sensitivity.",
            "itemtype": "property",
            "name": "MovementModifier.rotate.sensitivity",
            "type": "Number",
            "class": "MovementModifier"
        },
        {
            "file": "masterclient.js",
            "line": 65,
            "description": "Set moving sensitivity.",
            "itemtype": "property",
            "name": "MovementModifier.moving.sensitivity",
            "type": "Number",
            "class": "MovementModifier"
        },
        {
            "file": "masterclient.js",
            "line": 72,
            "description": "Set moving amount vector.",
            "itemtype": "property",
            "name": "MovementModifier.moving.amount",
            "type": "Number",
            "class": "MovementModifier"
        },
        {
            "file": "masterclient.js",
            "line": 80,
            "description": "Set motion vector.",
            "itemtype": "property",
            "name": "MovementModifier.motion",
            "type": "Number",
            "class": "MovementModifier"
        },
        {
            "file": "masterclient.js",
            "line": 96,
            "description": "Master class initialisation.",
            "itemtype": "method",
            "name": "init",
            "static": 1,
            "class": "MasterClass"
        },
        {
            "file": "masterclient.js",
            "line": 105,
            "description": "Connect frame updates.",
            "itemtype": "event",
            "name": "frame.Updated.connect",
            "params": [
                {
                    "name": "Update",
                    "description": "Function to invoke",
                    "type": "Object"
                }
            ],
            "class": "MasterClass"
        },
        {
            "file": "masterclient.js",
            "line": 126,
            "description": "Connect camera movement handler.",
            "itemtype": "event",
            "name": "entity.Action(\"MSG_MOVE_CAM\").Triggered.connect",
            "params": [
                {
                    "name": "MoveCameras",
                    "description": "Function to invoke",
                    "type": "Object"
                }
            ],
            "class": "MasterClass"
        },
        {
            "file": "masterclient.js",
            "line": 133,
            "description": "Connect screen letterbox size handler.",
            "itemtype": "event",
            "name": "entity.Action(\"MSG_LETTER_BOX\").Triggered.connect",
            "params": [
                {
                    "name": "LetterBox",
                    "description": "Function to invoke",
                    "type": "Object"
                }
            ],
            "class": "MasterClass"
        },
        {
            "file": "masterclient.js",
            "line": 140,
            "description": "Connect status message handler.",
            "itemtype": "event",
            "name": "entity.Action(\"MSG_STATUSMSG\").Triggered.connect",
            "params": [
                {
                    "name": "UpdateStatus",
                    "description": "Function to invoke",
                    "type": "Object"
                }
            ],
            "class": "MasterClass"
        },
        {
            "file": "masterclient.js",
            "line": 147,
            "description": "Connect window resize listener.",
            "itemtype": "event",
            "name": "ui.GraphicsScene().sceneRectChanged.connect",
            "params": [
                {
                    "name": "windowResized",
                    "description": "Function to invoke",
                    "type": "Object"
                }
            ],
            "class": "MasterClass"
        },
        {
            "file": "masterclient.js",
            "line": 154,
            "description": "Connect attribute change listener.",
            "itemtype": "event",
            "name": "entity.placeable.AttributeChanged.connect",
            "params": [
                {
                    "name": "ParentEntityRefChanged",
                    "description": "Function to invoke",
                    "type": "Object"
                }
            ],
            "class": "MasterClass"
        },
        {
            "file": "masterclient.js",
            "line": 162,
            "description": "Clears duplicates from scene when Script is (re)loaded",
            "itemtype": "method",
            "name": "clearScene",
            "class": "MasterClass"
        },
        {
            "file": "masterclient.js",
            "line": 168,
            "description": "Get array of scene items.",
            "itemtype": "method",
            "name": "ui.GraphicsScene().items",
            "return": {
                "description": "ui_items.",
                "type": "Array"
            },
            "class": "MasterClass"
        },
        {
            "file": "masterclient.js",
            "line": 179,
            "description": "Remove item.",
            "itemtype": "method",
            "name": "ui.GraphicsScene().removeItem",
            "params": [
                {
                    "name": "param",
                    "description": "Item to remove",
                    "type": "Object"
                }
            ],
            "class": "MasterClass"
        },
        {
            "file": "masterclient.js",
            "line": 190,
            "description": "Get entity by name.",
            "itemtype": "method",
            "name": "scene.GetEntityByName",
            "params": [
                {
                    "name": "name",
                    "description": "Entity name to get",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Arrow.",
                "type": "Object"
            },
            "class": "MasterClass"
        },
        {
            "file": "masterclient.js",
            "line": 200,
            "description": "Remove (old) Arrow entity if found",
            "itemtype": "method",
            "name": "scene.RemoveEntity",
            "params": [
                {
                    "name": "oldArrow.Id",
                    "description": "Arrow's id number",
                    "type": "Number"
                },
                {
                    "name": "AttributeChange=Default",
                    "description": "Enumeration of attribute/component change types for replication. (2=LocalOnly, 3=Replicate)",
                    "type": "Enum"
                }
            ],
            "return": {
                "description": "Return true if entity has been found and removed.",
                "type": "Boolean"
            },
            "class": "MasterClass"
        },
        {
            "file": "masterclient.js",
            "line": 214,
            "description": "Sets and shows Info widget default values.",
            "itemtype": "method",
            "name": "showInfoWidgetDefaultValues",
            "class": "MasterClass"
        },
        {
            "file": "masterclient.js",
            "line": 227,
            "description": "Create 3D Arrow entity.",
            "itemtype": "method",
            "name": "create3DArrow",
            "class": "MasterClass"
        },
        {
            "file": "masterclient.js",
            "line": 233,
            "description": "Create 3D Arrow local entity with Placeable, Mesh and Name components.",
            "itemtype": "method",
            "name": "scene.CreateLocalEntity",
            "params": [
                {
                    "name": "components",
                    "description": "Creates entity with listed components",
                    "type": "Array"
                }
            ],
            "class": "MasterClass"
        },
        {
            "file": "masterclient.js",
            "line": 240,
            "description": "Set entity's name.",
            "itemtype": "method",
            "name": "entity.SetName",
            "params": [
                {
                    "name": "param",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "MasterClass"
        },
        {
            "file": "masterclient.js",
            "line": 247,
            "description": "Set mesh reference of entity.",
            "itemtype": "method",
            "name": "entity.mesh.meshRef",
            "params": [
                {
                    "name": "param",
                    "description": "Mesh file name and path",
                    "type": "String"
                }
            ],
            "class": "MasterClass"
        },
        {
            "file": "masterclient.js",
            "line": 254,
            "description": "Set mesh material of entity.",
            "itemtype": "method",
            "name": "entity.mesh.meshMaterial",
            "params": [
                {
                    "name": "param",
                    "description": "Mesh material file name and path",
                    "type": "String"
                }
            ],
            "class": "MasterClass"
        },
        {
            "file": "masterclient.js",
            "line": 263,
            "description": "Parents this entity to another entity.",
            "itemtype": "method",
            "name": "entity.placeable.SetParent",
            "params": [
                {
                    "name": "entity",
                    "description": "Parenting refers to this entity (Void-entity)",
                    "type": "Object"
                },
                {
                    "name": "preserveWorldTransform=false",
                    "description": "When false, the transform attribute of this placeable is treated as the new local",
                    "type": "Boolean"
                }
            ],
            "class": "MasterClass"
        },
        {
            "file": "masterclient.js",
            "line": 271,
            "description": "Set transformation of entity.",
            "itemtype": "method",
            "name": "entity.placeable.transform",
            "class": "MasterClass"
        },
        {
            "file": "masterclient.js",
            "line": 283,
            "description": "Send new parent entity reference value to all slave clients if user changes that.",
            "itemtype": "method",
            "name": "ParentEntityRefChanged",
            "params": [
                {
                    "name": "attribute",
                    "description": "Attribute of MasterClient-entity's Placeable-component",
                    "type": "Object"
                }
            ],
            "class": "MasterClass"
        },
        {
            "file": "masterclient.js",
            "line": 292,
            "description": "Represents an executable command on the Void-entity.",
            "itemtype": "method",
            "name": "voidEntity.Exec",
            "params": [
                {
                    "name": "ExecType",
                    "description": "Execution type of the action, i.e. where the actions are executed. 1=local, 2=server. 4=peers, 5=local+peers...",
                    "type": "Enum"
                },
                {
                    "name": "p1",
                    "description": "1st parameter for the action, if applicable. Emitted when the action is triggered",
                    "type": "Signal"
                },
                {
                    "name": "p2",
                    "description": "2nd parameter for the action, if applicable. Emitted when the action is triggered",
                    "type": "Signal"
                },
                {
                    "name": "p3",
                    "description": "3rd parameter for the action, if applicable. Emitted when the action is triggered",
                    "type": "Signal"
                },
                {
                    "name": "rest",
                    "description": "Rest of the parameters, if applicable",
                    "type": "Array"
                }
            ],
            "class": "MasterClass"
        },
        {
            "file": "masterclient.js",
            "line": 306,
            "description": "Create Info widgets and layout for them",
            "itemtype": "method",
            "name": "setInfoWidgetLayout",
            "class": "MasterClass"
        },
        {
            "file": "masterclient.js",
            "line": 314,
            "description": "Sets the layout manager for mainWidget.",
            "itemtype": "method",
            "name": "mainWidget.setLayout",
            "params": [
                {
                    "name": "layout",
                    "description": "(QLayout)"
                }
            ],
            "class": "MasterClass"
        },
        {
            "file": "masterclient.js",
            "line": 321,
            "description": "Sets both the minimum and maximum width of mainWidget.",
            "itemtype": "method",
            "name": "mainWidget.setFixedWidth",
            "params": [
                {
                    "name": "w",
                    "description": "(Number)"
                }
            ],
            "class": "MasterClass"
        },
        {
            "file": "masterclient.js",
            "line": 328,
            "description": "Adds the given widget to the cell grid at row, column. The top-left position is (0, 0) by default.",
            "itemtype": "method",
            "name": "layout.addWidget",
            "params": [
                {
                    "name": "widget",
                    "description": "",
                    "type": "QWidget"
                },
                {
                    "name": "row",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "column",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "MasterClass"
        },
        {
            "file": "masterclient.js",
            "line": 341,
            "description": "Sets the left, top, right, and bottom margins to use around the layout.",
            "itemtype": "method",
            "name": "layout.setContentsMargins",
            "params": [
                {
                    "name": "left",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "top",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "right",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "bottom",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "MasterClass"
        },
        {
            "file": "masterclient.js",
            "line": 351,
            "description": "Sets spacing between widgets inside the layout.",
            "itemtype": "method",
            "name": "layout.setSpacing",
            "params": [
                {
                    "name": "i",
                    "description": "",
                    "type": "Number",
                    "optional": true
                }
            ],
            "class": "MasterClass"
        },
        {
            "file": "masterclient.js",
            "line": 358,
            "description": "This property holds the scene rectangle; the bounding rectangle of the scene.",
            "itemtype": "method",
            "name": "ui.GraphicsScene().sceneRect",
            "return": {
                "description": "Rectangle in the plane using floating point precision",
                "type": "QRectF"
            },
            "class": "MasterClass"
        },
        {
            "file": "masterclient.js",
            "line": 365,
            "description": "Creates a proxy widget for the widget and adds it to the main graphics scene.",
            "itemtype": "method",
            "name": "ui.AddWidgetToScene",
            "params": [
                {
                    "name": "widget",
                    "description": "",
                    "type": "QWidget"
                }
            ],
            "return": {
                "description": "Proxy widget",
                "type": "QGraphicsProxyWidget"
            },
            "class": "MasterClass"
        },
        {
            "file": "masterclient.js",
            "line": 373,
            "itemtype": "attribute",
            "name": "infoWidgetProxy.windowFlags",
            "type": "Enum 0=Widget, 1=Window, 2=Dialog, 8=Popup, 0xA=Tool, 0xC=ToolTip, 0xE=SplashScreen...",
            "default": "0",
            "class": "MasterClass"
        },
        {
            "file": "masterclient.js",
            "line": 380,
            "itemtype": "attribute",
            "name": "infoWidgetProxy.visible",
            "type": "Boolean",
            "class": "MasterClass"
        },
        {
            "file": "masterclient.js",
            "line": 386,
            "itemtype": "attribute",
            "name": "infoWidgetProxy.y",
            "type": "Number",
            "class": "MasterClass"
        },
        {
            "file": "masterclient.js",
            "line": 392,
            "itemtype": "attribute",
            "name": "infoWidgetProxy.x",
            "type": "Number",
            "class": "MasterClass"
        },
        {
            "file": "masterclient.js",
            "line": 398,
            "description": "Customize the look of widget.",
            "itemtype": "method",
            "name": "mainWidget.setStyleSheet",
            "params": [
                {
                    "name": "widget&styleSheet",
                    "description": "setStyleSheet(widget {styleSheet})",
                    "type": "Mixed"
                }
            ],
            "class": "MasterClass"
        },
        {
            "file": "masterclient.js",
            "line": 405,
            "description": "Sets the level of opacity for the window (widget). Default 1.0",
            "itemtype": "method",
            "name": "mainWidget.setWindowOpacity",
            "params": [
                {
                    "name": "level",
                    "description": "",
                    "type": "Qreal"
                }
            ],
            "class": "MasterClass"
        },
        {
            "file": "masterclient.js",
            "line": 416,
            "description": "Create Helper widget",
            "itemtype": "method",
            "name": "helpWidget",
            "class": "MasterClass"
        },
        {
            "file": "masterclient.js",
            "line": 424,
            "description": "Set the label's text.",
            "itemtype": "attribute",
            "name": "QLabel.text",
            "type": "String",
            "class": "MasterClass"
        },
        {
            "file": "masterclient.js",
            "line": 451,
            "description": "Adds proxy widget to the scene",
            "itemtype": "method",
            "name": "ui.AddProxyWidgetToScene",
            "params": [
                {
                    "name": "ProxyWidget",
                    "description": "",
                    "type": "QGraphicsProxyWidget"
                }
            ],
            "class": "MasterClass"
        },
        {
            "file": "masterclient.js",
            "line": 461,
            "description": "Resize black block sizes on screen edges",
            "itemtype": "method",
            "name": "LetterBox",
            "params": [
                {
                    "name": "size",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "MasterClass"
        },
        {
            "file": "masterclient.js",
            "line": 474,
            "description": "Gets main application window",
            "itemtype": "method",
            "name": "ui.MainWindow",
            "return": {
                "description": "Main window",
                "type": "Object"
            },
            "class": "MasterClass"
        },
        {
            "file": "masterclient.js",
            "line": 481,
            "description": "Get main window height",
            "itemtype": "method",
            "name": "mainwin.size.height",
            "return": {
                "description": "height",
                "type": "Number"
            },
            "class": "MasterClass"
        },
        {
            "file": "masterclient.js",
            "line": 488,
            "description": "Get main window width",
            "itemtype": "method",
            "name": "mainwin.size.width",
            "return": {
                "description": "width",
                "type": "Number"
            },
            "class": "MasterClass"
        },
        {
            "file": "masterclient.js",
            "line": 515,
            "description": "Used here to set the item's color.",
            "itemtype": "method",
            "name": "QGraphicsPolygonItem.setBrush",
            "params": [
                {
                    "name": "color",
                    "description": "Brush color",
                    "type": "QColor"
                }
            ],
            "class": "MasterClass"
        },
        {
            "file": "masterclient.js",
            "line": 523,
            "description": "Set item's opacity.",
            "itemtype": "method",
            "name": "QGraphicsPolygonItem.setOpacity",
            "params": [
                {
                    "name": "level",
                    "description": "",
                    "type": "Qreal"
                }
            ],
            "class": "MasterClass"
        },
        {
            "file": "masterclient.js",
            "line": 531,
            "description": "Add item.",
            "itemtype": "method",
            "name": "ui.GraphicsScene().addItem",
            "params": [
                {
                    "name": "param",
                    "description": "Item to add",
                    "type": "Object"
                }
            ],
            "class": "MasterClass"
        },
        {
            "file": "masterclient.js",
            "line": 541,
            "description": "Move master camera forward or backward",
            "itemtype": "method",
            "name": "MoveCameras",
            "params": [
                {
                    "name": "param",
                    "description": "forward|backward",
                    "type": "String"
                }
            ],
            "class": "MasterClass"
        },
        {
            "file": "masterclient.js",
            "line": 568,
            "description": "Set new x coordinate point of InfoWidget if window size resized.",
            "itemtype": "method",
            "name": "windowResized",
            "params": [
                {
                    "name": "rect",
                    "description": "",
                    "type": "QRectF"
                }
            ],
            "class": "MasterClass"
        },
        {
            "file": "masterclient.js",
            "line": 579,
            "description": "Emitted when it is time for client code to update their applications.",
            "itemtype": "method",
            "name": "Update",
            "params": [
                {
                    "name": "frametime",
                    "description": "Elapsed time in seconds since the last frame",
                    "type": "Float"
                }
            ],
            "class": "MasterClass"
        },
        {
            "file": "masterclient.js",
            "line": 586,
            "description": "Begin profiling a piece of code.",
            "itemtype": "method",
            "name": "profiler.BeginBlock",
            "params": [
                {
                    "name": "Label",
                    "description": "Profiling label",
                    "type": "String"
                }
            ],
            "class": "MasterClass"
        },
        {
            "file": "masterclient.js",
            "line": 603,
            "description": "Returns the orientation of entity's transform.",
            "itemtype": "method",
            "name": "entity.placeable.Orientation",
            "params": [
                {
                    "name": "MovementModifier.motion",
                    "description": "MovementModifier.motion vector multiplied by quaternion of itself",
                    "type": "Array"
                }
            ],
            "class": "MasterClass"
        },
        {
            "file": "masterclient.js",
            "line": 610,
            "description": "Sets the position of entity's transform.",
            "itemtype": "method",
            "name": "entity.placeable.SetPosition",
            "params": [
                {
                    "name": "MovementModifier.motion",
                    "description": "Current position added by g_motion",
                    "type": "Array"
                }
            ],
            "class": "MasterClass"
        },
        {
            "file": "masterclient.js",
            "line": 620,
            "description": "Create MasterClient-entity which handles MasterClient components",
            "itemtype": "method",
            "name": "createMasterClient",
            "class": "MasterClass"
        },
        {
            "file": "masterclient.js",
            "line": 629,
            "description": "Sets entity's temporary value to true",
            "itemtype": "method",
            "name": "entity.SetTemporary",
            "params": [
                {
                    "name": "param",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "class": "MasterClass"
        },
        {
            "file": "masterclient.js",
            "line": 641,
            "description": "Set MasterCamera parameters. MasterCamera is responsible for showing proper viewport of MasterClient.",
            "itemtype": "method",
            "name": "setMasterCamera",
            "class": "MasterClass"
        },
        {
            "file": "masterclient.js",
            "line": 647,
            "description": "Gets camera component of entity.",
            "itemtype": "method",
            "name": "entity.camera",
            "return": {
                "description": "Camera object",
                "type": "Object"
            },
            "class": "MasterClass"
        },
        {
            "file": "masterclient.js",
            "line": 654,
            "itemtype": "attribute",
            "name": "camera.verticalFov",
            "type": "Number",
            "class": "MasterClass"
        },
        {
            "file": "masterclient.js",
            "line": 660,
            "description": "Activates camera component.",
            "itemtype": "method",
            "name": "camera.SetActive",
            "class": "MasterClass"
        },
        {
            "file": "masterclient.js",
            "line": 667,
            "description": "Set initial spawn point",
            "itemtype": "method",
            "name": "setSpawnPoint",
            "class": "MasterClass"
        },
        {
            "file": "masterclient.js",
            "line": 679,
            "description": "Create handler for keyboard and mouse events",
            "itemtype": "method",
            "name": "createInputHandler",
            "class": "MasterClass"
        },
        {
            "file": "masterclient.js",
            "line": 685,
            "description": "Creates a new input context.",
            "itemtype": "method",
            "name": "input.RegisterInputContextRaw",
            "params": [
                {
                    "name": "name",
                    "description": "Sets the name of this InputContext",
                    "type": "String"
                },
                {
                    "name": "priority",
                    "description": "InputContext priority",
                    "type": "Number"
                }
            ],
            "class": "MasterClass"
        },
        {
            "file": "masterclient.js",
            "line": 693,
            "description": "Set to true to receive mouse input events even when the mouse cursor is over a Qt widget.",
            "itemtype": "attribute",
            "name": "inputContext.takeMouseEventsOverQt",
            "type": "Boolean",
            "class": "MasterClass"
        },
        {
            "file": "masterclient.js",
            "line": 700,
            "description": "Connect key press handler.",
            "itemtype": "event",
            "name": "inputContext.KeyPressed.connect",
            "params": [
                {
                    "name": "HandleKeyPress",
                    "description": "Function to invoke",
                    "type": "Object"
                }
            ],
            "class": "MasterClass"
        },
        {
            "file": "masterclient.js",
            "line": 707,
            "description": "Connect key release handler.",
            "itemtype": "event",
            "name": "inputContext.KeyReleased.connect",
            "params": [
                {
                    "name": "HandleKeyRelease",
                    "description": "Function to invoke",
                    "type": "Object"
                }
            ],
            "class": "MasterClass"
        },
        {
            "file": "masterclient.js",
            "line": 714,
            "description": "Connect mouse event handler.",
            "itemtype": "event",
            "name": "inputContext.MouseEventReceived.connect",
            "params": [
                {
                    "name": "HandleMouse",
                    "description": "Function to invoke",
                    "type": "Object"
                }
            ],
            "class": "MasterClass"
        },
        {
            "file": "masterclient.js",
            "line": 723,
            "description": "Handler for key press commands",
            "itemtype": "method",
            "name": "HandleKeyPress",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "KeyEvent"
                }
            ],
            "class": "MasterClass"
        },
        {
            "file": "masterclient.js",
            "line": 783,
            "description": "Round a number upward to it's nearest integer.",
            "itemtype": "method",
            "name": "Math.ceil",
            "params": [
                {
                    "name": "param",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Rounded result",
                "type": "Number"
            },
            "class": "MasterClass"
        },
        {
            "file": "masterclient.js",
            "line": 807,
            "description": "Round a number downward  to it's nearest integer.",
            "itemtype": "method",
            "name": "Math.floor",
            "params": [
                {
                    "name": "param",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Rounded result",
                "type": "Number"
            },
            "class": "MasterClass"
        },
        {
            "file": "masterclient.js",
            "line": 874,
            "description": "Rotates QPixmap object around its center.",
            "itemtype": "method",
            "name": "QPixmap.setRotation",
            "params": [
                {
                    "name": "degrees",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "MasterClass"
        },
        {
            "file": "masterclient.js",
            "line": 923,
            "description": "Hide QPixmap object.",
            "itemtype": "method",
            "name": "QPixmap.hide",
            "type": "QPixmap",
            "class": "MasterClass"
        },
        {
            "file": "masterclient.js",
            "line": 931,
            "description": "Removes mesh.",
            "itemtype": "method",
            "name": "entity.mesh.RemoveMesh",
            "class": "MasterClass"
        },
        {
            "file": "masterclient.js",
            "line": 942,
            "description": "Show hidden QPixmap object.",
            "itemtype": "method",
            "name": "QPixmap.show",
            "type": "QPixmap",
            "class": "MasterClass"
        },
        {
            "file": "masterclient.js",
            "line": 964,
            "description": "Handler for key release commands (stop movement)",
            "itemtype": "method",
            "name": "HandleKeyRelease",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "KeyEvent"
                }
            ],
            "return": {
                "description": ""
            },
            "class": "MasterClass"
        },
        {
            "file": "masterclient.js",
            "line": 991,
            "description": "Handler for mouse events",
            "itemtype": "method",
            "name": "HandleMouse",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "MouseEvent"
                }
            ],
            "class": "MasterClass"
        },
        {
            "file": "masterclient.js",
            "line": 1015,
            "description": "Handler for mouse x axis relative movement (rotate camera)",
            "itemtype": "method",
            "name": "HandleMouseLookX",
            "params": [
                {
                    "name": "param",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "MasterClass"
        },
        {
            "file": "masterclient.js",
            "line": 1035,
            "description": "Description",
            "itemtype": "method",
            "name": "HandleMouseLookY",
            "params": [
                {
                    "name": "param",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": ""
            },
            "class": "MasterClass"
        },
        {
            "file": "masterclient.js",
            "line": 1053,
            "description": "Changes forward direction and rotate 3D Arrow by RMB",
            "itemtype": "method",
            "name": "ChangeForwardDirectionByMouse",
            "params": [
                {
                    "name": "param",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "MasterClass"
        },
        {
            "file": "masterclient.js",
            "line": 1080,
            "description": "Displays compass and compass needle on screen",
            "itemtype": "method",
            "name": "drawCompass",
            "class": "MasterClass"
        },
        {
            "file": "masterclient.js",
            "line": 1086,
            "description": "This path specifies a local filename from which this asset can be reloaded if necessary.",
            "itemtype": "method",
            "name": "asset.GetAsset(path+filename).DiskSource",
            "class": "MasterClass"
        },
        {
            "file": "masterclient.js",
            "line": 1093,
            "description": "Creates and adds a pixmap item to the scene.",
            "itemtype": "method",
            "name": "ui.GraphicsScene().addPixmap",
            "params": [
                {
                    "name": "pixmap",
                    "description": "",
                    "type": "QPixmap"
                }
            ],
            "class": "MasterClass"
        },
        {
            "file": "masterclient.js",
            "line": 1101,
            "description": "Sets transformation origin point. For example for standard rotation, set x and y values to the center of image.",
            "itemtype": "method",
            "name": "QPixmap.setTransformOriginPoint",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "MasterClass"
        },
        {
            "file": "masterclient.js",
            "line": 1110,
            "description": "Remove FreeLookCamera from the scene",
            "itemtype": "method",
            "name": "removeFreeLookCamera",
            "class": "MasterClass"
        },
        {
            "file": "masterclient.js",
            "line": 1124,
            "description": "Shows status messages in widget5",
            "itemtype": "method",
            "name": "UpdateStatus",
            "params": [
                {
                    "name": "text",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "MasterClass"
        },
        {
            "file": "server.js",
            "line": 17,
            "description": "Server class initialisation.",
            "itemtype": "method",
            "name": "init",
            "static": 1,
            "class": "ServerClass"
        },
        {
            "file": "server.js",
            "line": 31,
            "description": "Create Void-entity with Placeable and Camera components.",
            "itemtype": "method",
            "name": "createVoidEntity",
            "static": 1,
            "class": "ServerClass"
        },
        {
            "file": "server.js",
            "line": 39,
            "description": "Creates new entity that contains the specified components.",
            "itemtype": "method",
            "name": "scene.CreateEntity",
            "params": [
                {
                    "name": "id",
                    "description": "Next free ID number",
                    "type": "Number"
                },
                {
                    "name": "components",
                    "description": "{Object} Creates entity with listed components",
                    "optional": true
                },
                {
                    "name": "AttributeChange=Default",
                    "description": "Enumeration of attribute/component change types for replication. (2=LocalOnly, 3=Replicate)",
                    "type": "Enum"
                },
                {
                    "name": "replicated=true",
                    "description": "Whether entity is replicated to server and other clients",
                    "type": "Boolean"
                },
                {
                    "name": "componentsReplicated=true",
                    "description": "Whether components will be replicated to server and other clients",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "Void-entity.",
                "type": "Object"
            },
            "class": "ServerClass"
        },
        {
            "file": "server.js",
            "line": 56,
            "description": "Set Void-entity's name.",
            "itemtype": "method",
            "name": "voidEntity.SetName",
            "params": [
                {
                    "name": "param",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "ServerClass"
        },
        {
            "file": "server.js",
            "line": 63,
            "description": "Sets Void-entity's temporary value to true",
            "itemtype": "method",
            "name": "voidEntity.SetTemporary",
            "params": [
                {
                    "name": "param",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "class": "ServerClass"
        },
        {
            "file": "server.js",
            "line": 70,
            "description": "Sets Void-entity's camera component active",
            "itemtype": "method",
            "name": "voidEntity.camera.SetActive",
            "class": "ServerClass"
        },
        {
            "file": "server.js",
            "line": 79,
            "description": "Remove FreeLookCamera from the scene.",
            "itemtype": "method",
            "name": "removeFreeLookCamera",
            "class": "ServerClass"
        },
        {
            "file": "server.js",
            "line": 85,
            "description": "Get entity by name.",
            "itemtype": "method",
            "name": "scene.GetEntityByName",
            "params": [
                {
                    "name": "name",
                    "description": "Entity name to get",
                    "type": "String"
                }
            ],
            "return": {
                "description": "FreeLookCamera.",
                "type": "Object"
            },
            "class": "ServerClass"
        },
        {
            "file": "server.js",
            "line": 93,
            "description": "Remove FreeLookCamera entity if found",
            "itemtype": "method",
            "name": "scene.RemoveEntity",
            "params": [
                {
                    "name": "freeLookCamera.Id",
                    "description": "FreeLookCamera's id number",
                    "type": "Number"
                },
                {
                    "name": "AttributeChange=Default",
                    "description": "Enumeration of attribute/component change types for replication. (2=LocalOnly, 3=Replicate)",
                    "type": "Enum"
                }
            ],
            "return": {
                "description": "Return true if entity has been found and removed.",
                "type": "Boolean"
            },
            "class": "ServerClass"
        },
        {
            "file": "slaveclients.js",
            "line": 44,
            "description": "Slave class initialisation.",
            "itemtype": "method",
            "name": "init",
            "static": 1,
            "class": "SlaveClass"
        },
        {
            "file": "slaveclients.js",
            "line": 60,
            "description": "Connect window resize listener.",
            "itemtype": "event",
            "name": "ui.GraphicsScene().sceneRectChanged.connect",
            "params": [
                {
                    "name": "windowResized",
                    "description": "Function to invoke",
                    "type": "Object"
                }
            ],
            "class": "SlaveClass"
        },
        {
            "file": "slaveclients.js",
            "line": 67,
            "description": "Connect camera fov handler.",
            "itemtype": "event",
            "name": "entity.Action(\"MSG_FOV_CHG\").Triggered.connect",
            "params": [
                {
                    "name": "MoveCameras",
                    "description": "Function to invoke",
                    "type": "Object"
                }
            ],
            "class": "SlaveClass"
        },
        {
            "file": "slaveclients.js",
            "line": 74,
            "description": "Connect attribute change listener.",
            "itemtype": "event",
            "name": "entity.placeable.AttributeChanged.connect",
            "params": [
                {
                    "name": "ParentEntityRefChanged",
                    "description": "Function to invoke",
                    "type": "Object"
                }
            ],
            "class": "SlaveClass"
        },
        {
            "file": "slaveclients.js",
            "line": 81,
            "description": "Connect camera movement handler.",
            "itemtype": "event",
            "name": "entity.Action(\"MSG_MOVE_CAM\").Triggered.connect",
            "params": [
                {
                    "name": "MoveCameras",
                    "description": "Function to invoke",
                    "type": "Object"
                }
            ],
            "class": "SlaveClass"
        },
        {
            "file": "slaveclients.js",
            "line": 88,
            "description": "Connect camera reset handler.",
            "itemtype": "event",
            "name": "entity.Action(\"MSG_RESET_CAMERAS\").Triggered.connect",
            "params": [
                {
                    "name": "MoveCameras",
                    "description": "Function to invoke",
                    "type": "Object"
                }
            ],
            "class": "SlaveClass"
        },
        {
            "file": "slaveclients.js",
            "line": 95,
            "description": "Connect screen letterbox size handler.",
            "itemtype": "event",
            "name": "entity.Action(\"MSG_LETTER_BOX\").Triggered.connect",
            "params": [
                {
                    "name": "LetterBox",
                    "description": "Function to invoke",
                    "type": "Object"
                }
            ],
            "class": "SlaveClass"
        },
        {
            "file": "slaveclients.js",
            "line": 102,
            "description": "Connect 3DArrow rotation handler.",
            "itemtype": "event",
            "name": "entity.Action(\"MSG_ROTATE_ARROW\").Triggered.connect",
            "params": [
                {
                    "name": "UpdateStatus",
                    "description": "Function to invoke",
                    "type": "Object"
                }
            ],
            "class": "SlaveClass"
        },
        {
            "file": "slaveclients.js",
            "line": 109,
            "description": "Connect widgets visibility handler.",
            "itemtype": "event",
            "name": "entity.Action(\"MSG_TOGGLE_WIDGETS\").Triggered.connect",
            "params": [
                {
                    "name": "UpdateStatus",
                    "description": "Function to invoke",
                    "type": "Object"
                }
            ],
            "class": "SlaveClass"
        },
        {
            "file": "slaveclients.js",
            "line": 116,
            "description": "Connect status message handler.",
            "itemtype": "event",
            "name": "entity.Action(\"MSG_STATUSMSG\").Triggered.connect",
            "params": [
                {
                    "name": "UpdateStatus",
                    "description": "Function to invoke",
                    "type": "Object"
                }
            ],
            "class": "SlaveClass"
        },
        {
            "file": "slaveclients.js",
            "line": 124,
            "description": "Clears duplicates from scene when Script is (re)loaded",
            "itemtype": "method",
            "name": "clearScene",
            "class": "SlaveClass"
        },
        {
            "file": "slaveclients.js",
            "line": 138,
            "description": "Create Info widgets and layout for them",
            "itemtype": "method",
            "name": "setInfoWidgetLayout",
            "class": "SlaveClass"
        },
        {
            "file": "slaveclients.js",
            "line": 165,
            "description": "Toggle widgets on and off",
            "itemtype": "method",
            "name": "ToggleWidgets",
            "params": [
                {
                    "name": "param",
                    "description": "hide/show",
                    "type": "String"
                }
            ],
            "class": "SlaveClass"
        },
        {
            "file": "slaveclients.js",
            "line": 184,
            "description": "Rotate 3D Arrow by a given amount.",
            "itemtype": "method",
            "name": "RotateArrow",
            "params": [
                {
                    "name": "param",
                    "description": "amount",
                    "type": "Number"
                }
            ],
            "class": "SlaveClass"
        },
        {
            "file": "slaveclients.js",
            "line": 196,
            "description": "Resize black block sizes on screen edges.",
            "itemtype": "method",
            "name": "LetterBox",
            "params": [
                {
                    "name": "size",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "SlaveClass"
        },
        {
            "file": "slaveclients.js",
            "line": 239,
            "description": "Move master camera forward or backward.",
            "itemtype": "method",
            "name": "MoveCameras",
            "params": [
                {
                    "name": "param",
                    "description": "forward/backward",
                    "type": "String"
                }
            ],
            "class": "SlaveClass"
        },
        {
            "file": "slaveclients.js",
            "line": 263,
            "description": "Reset positions of SlaveClient entity and SlaveCamera.",
            "itemtype": "method",
            "name": "ResetCameras",
            "class": "SlaveClass"
        },
        {
            "file": "slaveclients.js",
            "line": 278,
            "description": "Set new parent entity reference value.",
            "itemtype": "method",
            "name": "setParentEntityRef",
            "params": [
                {
                    "name": "attribute",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "SlaveClass"
        },
        {
            "file": "slaveclients.js",
            "line": 290,
            "description": "Change fov value.",
            "itemtype": "method",
            "name": "ChangeFov",
            "params": [
                {
                    "name": "fov",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "SlaveClass"
        },
        {
            "file": "slaveclients.js",
            "line": 301,
            "description": "Set new x coordinate point of InfoWidget if window size resized.",
            "itemtype": "method",
            "name": "windowResized",
            "params": [
                {
                    "name": "rect",
                    "description": "",
                    "type": "QRectF"
                }
            ],
            "class": "SlaveClass"
        },
        {
            "file": "slaveclients.js",
            "line": 311,
            "description": "Create SlaveClient-entity which handles SlaveClient components.",
            "itemtype": "method",
            "name": "createSlaveClient",
            "class": "SlaveClass"
        },
        {
            "file": "slaveclients.js",
            "line": 327,
            "description": "Set SlaveCamera parameters. SlaveCamera is responsible for showing proper viewport of SlaveClient.",
            "itemtype": "method",
            "name": "setSlaveCamera",
            "class": "SlaveClass"
        },
        {
            "file": "slaveclients.js",
            "line": 348,
            "description": "Creaty.e 3D Arrow entit",
            "itemtype": "method",
            "name": "create3DArrow",
            "class": "SlaveClass"
        },
        {
            "file": "slaveclients.js",
            "line": 368,
            "description": "Remove FreeLookCamera from the scene.",
            "itemtype": "method",
            "name": "removeFreeLookCamera",
            "class": "SlaveClass"
        },
        {
            "file": "slaveclients.js",
            "line": 383,
            "description": "Shows status messages in widget5",
            "itemtype": "method",
            "name": "UpdateStatus",
            "params": [
                {
                    "name": "text",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "SlaveClass"
        }
    ],
    "warnings": []
}